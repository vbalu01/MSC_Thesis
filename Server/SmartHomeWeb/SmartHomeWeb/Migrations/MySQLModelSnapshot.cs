// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHomeWeb.Services;

#nullable disable

namespace SmartHomeWeb.Migrations
{
    [DbContext(typeof(MySQL))]
    partial class MySQLModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Home", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Measurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SensorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<Guid>("HouseId")
                        .HasColumnType("char(36)");

                    b.Property<byte>("IsPartRoom")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("PosX")
                        .HasColumnType("int");

                    b.Property<int>("PosY")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)");

                    b.Property<int?>("SensorPosX")
                        .HasColumnType("int");

                    b.Property<int?>("SensorPosY")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Sensor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DisplayText")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)");

                    b.Property<int?>("PosX")
                        .HasColumnType("int");

                    b.Property<int?>("PosY")
                        .HasColumnType("int");

                    b.Property<double>("RecommendedValMax")
                        .HasColumnType("double");

                    b.Property<double>("RecommendedValMin")
                        .HasColumnType("double");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.User", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("varchar(155)");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.UserHome", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)")
                        .HasColumnOrder(0);

                    b.Property<Guid>("HomeId")
                        .HasColumnType("char(36)")
                        .HasColumnOrder(1);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId", "HomeId");

                    b.HasIndex("HomeId");

                    b.ToTable("UserHomes");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Measurement", b =>
                {
                    b.HasOne("SmartHomeWeb.Models.DBModels.Sensor", "Sensor")
                        .WithMany("Measurements")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Room", b =>
                {
                    b.HasOne("SmartHomeWeb.Models.DBModels.Home", "Home")
                        .WithMany("Rooms")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Sensor", b =>
                {
                    b.HasOne("SmartHomeWeb.Models.DBModels.Room", "Room")
                        .WithMany("Sensors")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.UserHome", b =>
                {
                    b.HasOne("SmartHomeWeb.Models.DBModels.Home", "Home")
                        .WithMany("UserHomes")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHomeWeb.Models.DBModels.User", "User")
                        .WithMany("UserHomes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Home", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("UserHomes");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Room", b =>
                {
                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.Sensor", b =>
                {
                    b.Navigation("Measurements");
                });

            modelBuilder.Entity("SmartHomeWeb.Models.DBModels.User", b =>
                {
                    b.Navigation("UserHomes");
                });
#pragma warning restore 612, 618
        }
    }
}
